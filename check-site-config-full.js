const { PrismaClient } = require('@prisma/client');

async function checkSiteConfig() {
  const prisma = new PrismaClient();
  
  try {
    console.log('üîç Verificando todas as configura√ß√µes do site...\n');
    
    // Buscar todas as configura√ß√µes
    const siteConfig = await prisma.siteConfig.findFirst();
    
    if (!siteConfig) {
      console.log('‚ùå Nenhuma configura√ß√£o encontrada no banco de dados');
      return;
    }
    
    console.log('üìã Configura√ß√µes completas do site:');
    console.log('=====================================');
    
    console.log(`üè¢ Empresa:`);
    console.log(`  - Nome: ${siteConfig.companyName || 'N√£o definido'}`);
    console.log(`  - Descri√ß√£o: ${siteConfig.companyDescription || 'N√£o definido'}`);
    console.log(`  - Miss√£o: ${siteConfig.companyMission || 'N√£o definido'}`);
    console.log(`  - Vis√£o: ${siteConfig.companyVision || 'N√£o definido'}`);
    console.log(`  - Valores: ${siteConfig.companyValues?.length > 0 ? siteConfig.companyValues.join(', ') : 'N√£o definido'}`);
    
    console.log(`\nüìß Contato:`);
    // Email log removed for security
    console.log(`  - Telefone: ${siteConfig.phone || 'N√£o definido'}`);
    console.log(`  - WhatsApp: ${siteConfig.whatsapp || 'N√£o definido'}`);
    console.log(`  - Endere√ßo: ${siteConfig.address || 'N√£o definido'}`);
    
    console.log(`\nüîó Redes Sociais:`);
    console.log(`  - Facebook: ${siteConfig.socialFacebook || 'N√£o definido'}`);
    console.log(`  - Instagram: ${siteConfig.socialInstagram || 'N√£o definido'}`);
    console.log(`  - LinkedIn: ${siteConfig.socialLinkedin || 'N√£o definido'}`);
    console.log(`  - Twitter: ${siteConfig.socialTwitter || 'N√£o definido'}`);
    console.log(`  - GitHub: ${siteConfig.socialGithub || 'N√£o definido'}`);
    
    console.log(`\nüé® Apar√™ncia:`);
    console.log(`  - Logo: ${siteConfig.logo || 'N√£o definido'}`);
    console.log(`  - Favicon: ${siteConfig.favicon || 'N√£o definido'}`);
    console.log(`  - Cor Prim√°ria: ${siteConfig.primaryColor || 'N√£o definido'}`);
    console.log(`  - Cor Secund√°ria: ${siteConfig.secondaryColor || 'N√£o definido'}`);
    
    console.log(`\nüîß Sistema:`);
    console.log(`  - Modo Manuten√ß√£o: ${siteConfig.maintenanceMode ? 'üöß ATIVO' : '‚úÖ INATIVO'}`);
    console.log(`  - Permitir Registro: ${siteConfig.allowRegistration ? '‚úÖ SIM' : '‚ùå N√ÉO'}`);
    
    console.log(`\nüìä Analytics:`);
    console.log(`  - Google Analytics: ${siteConfig.googleAnalyticsId || 'N√£o definido'}`);
    console.log(`  - Facebook Pixel: ${siteConfig.facebookPixelId || 'N√£o definido'}`);
    
    console.log(`\nüîç SEO:`);
    console.log(`  - T√≠tulo Padr√£o: ${siteConfig.defaultMetaTitle || 'N√£o definido'}`);
    console.log(`  - Descri√ß√£o Padr√£o: ${siteConfig.defaultMetaDescription || 'N√£o definido'}`);
    console.log(`  - Palavras-chave: ${siteConfig.defaultKeywords?.length > 0 ? siteConfig.defaultKeywords.join(', ') : 'N√£o definido'}`);
    
    console.log(`\nüìÖ Timestamps:`);
    console.log(`  - Criado em: ${siteConfig.createdAt}`);
    console.log(`  - Atualizado em: ${siteConfig.updatedAt}`);
    
    console.log('\n=====================================');
    
  } catch (error) {
    console.error('‚ùå Erro ao buscar configura√ß√µes:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

checkSiteConfig();
