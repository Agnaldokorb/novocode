// Script para testar conex√£o com banco de dados em produ√ß√£o
const { PrismaClient } = require('@prisma/client');

async function testConnection() {
  const prisma = new PrismaClient({
    datasources: {
      db: {
        url: process.env.DATABASE_URL
      }
    }
  });

  try {
    console.log('üîç Testando conex√£o com banco de dados...');
    console.log('URL do banco:', process.env.DATABASE_URL?.replace(/:[^:]*@/, ':***@'));
    
    // Teste b√°sico de conex√£o
    await prisma.$connect();
    console.log('‚úÖ Conex√£o estabelecida com sucesso!');
    
    // Teste de query simples
    const result = await prisma.$queryRaw`SELECT 1 as test`;
    console.log('‚úÖ Query de teste executada:', result);
    
    // Teste de contagem de tabelas
    const userCount = await prisma.user.count();
    console.log('‚úÖ N√∫mero de usu√°rios:', userCount);
    
    const serviceCount = await prisma.service.count();
    console.log('‚úÖ N√∫mero de servi√ßos:', serviceCount);
    
    const portfolioCount = await prisma.portfolio.count();
    console.log('‚úÖ N√∫mero de portfolios:', portfolioCount);
    
  } catch (error) {
    console.error('‚ùå Erro na conex√£o:', error.message);
    console.error('üìù Detalhes:', error);
    
    // An√°lise espec√≠fica do erro
    if (error.message.includes('Can\'t reach database server')) {
      console.error('üîß Problema: Servidor de banco de dados inacess√≠vel');
      console.error('üí° Poss√≠veis causas:');
      console.error('   1. Banco de dados Supabase pausado/inativo');
      console.error('   2. Credenciais de conex√£o incorretas');
      console.error('   3. Configura√ß√µes de rede/firewall');
      console.error('   4. Projeto Supabase foi removido/alterado');
    }
    
    if (error.message.includes('password authentication failed')) {
      console.error('üîß Problema: Falha na autentica√ß√£o');
      console.error('üí° Verifique as credenciais DATABASE_URL');
    }
  } finally {
    await prisma.$disconnect();
  }
}

testConnection().catch(console.error);
