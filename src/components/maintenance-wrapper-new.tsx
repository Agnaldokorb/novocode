import { ReactNode } from 'react';
import { redirect } from 'next/navigation';
import { createSupabaseServerClient } from '@/lib/supabase';

interface MaintenanceWrapperProps {
  children: ReactNode;
  allowDuringMaintenance?: boolean;
}

export async function MaintenanceWrapper({ 
  children, 
  allowDuringMaintenance = false 
}: MaintenanceWrapperProps) {
  // Se esta rota √© permitida durante manuten√ß√£o, n√£o verificar
  if (allowDuringMaintenance) {
    return <>{children}</>;
  }

  console.log('üîç MaintenanceWrapper verificando modo de manuten√ß√£o...');

  // Verificar modo de manuten√ß√£o
  let isMaintenanceMode = false;
  try {
    const supabase = await createSupabaseServerClient();
    
    const { data: siteConfig, error } = await supabase
      .from('site_config')
      .select('maintenanceMode')
      .single();

    if (error) {
      console.log('‚ö†Ô∏è Erro ao verificar modo manuten√ß√£o:', error.message);
      isMaintenanceMode = false;
    } else {
      isMaintenanceMode = siteConfig?.maintenanceMode || false;
      console.log('üîß Modo de manuten√ß√£o no BD:', isMaintenanceMode);
    }

    // Se est√° em modo manuten√ß√£o, verificar se √© admin
    if (isMaintenanceMode) {
      console.log('üöß Site em modo de manuten√ß√£o - verificando se √© admin');
      
      const { data: { user } } = await supabase.auth.getUser();
      
      if (user) {
        // Verificar se √© admin
        const { data: userData } = await supabase
          .from('users')
          .select('id, isActive, role')
          .eq('email', user.email)
          .single();

        const isAdmin = userData && userData.isActive && userData.role === 'ADMIN';
        
        if (!isAdmin) {
          console.log('üöß Redirecionando usu√°rio n√£o-admin para p√°gina de manuten√ß√£o');
          redirect('/maintenance');
        } else {
          console.log('‚úÖ Admin detectado - permitindo acesso durante manuten√ß√£o');
        }
      } else {
        console.log('üöß Redirecionando usu√°rio n√£o logado para p√°gina de manuten√ß√£o');
        redirect('/maintenance');
      }
    }
  } catch (error) {
    console.log('‚ö†Ô∏è Erro na verifica√ß√£o de manuten√ß√£o:', error);
    // Em caso de erro, n√£o bloquear o acesso
  }

  return <>{children}</>;
}
